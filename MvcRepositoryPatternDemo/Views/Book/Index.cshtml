@model IEnumerable<MvcRepositoryPatternDemo.Models.Book>

@{
    var totalPages = ViewData["TotalPages"] as int?;
    var currentPage = ViewData["CurrentPage"] as int?;
}

<div class="row">
    <div class="col-md-10">
        <h1>Index</h1>
      @*   @using (Html.BeginForm("Index", "Book", FormMethod.Get))
        {
            <div style="display:flex; justify-content:right;">
                @Html.TextBox("searchString", ViewData["SearchString"] as string, new { placeholder = "Enter title or author", autocomplete = "off" })
                &nbsp; <input type="submit" value="Search" class="btn btn-primary btn-sm" />
            </div>
        } *@
    </div>
    <div class="col-md-2">
        <a asp-action="Create" asp-controller="Book" class="btn btn-primary">Add Book</a>
       
    </div>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Auther)</th>
            <th>@Html.DisplayNameFor(model => model.Price)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
  @foreach (var item in Model) 
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Title)</td>
            <td>@Html.DisplayFor(modelItem => item.Auther)</td>
            <td>@Html.DisplayFor(modelItem => item.Price)</td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.bookId" class="btn btn-warning">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.bookId" class="btn btn-secondary">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.bookId" class="btn btn-danger">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>


<div class="pagination-container" style="display:flex; justify-content:right;">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)">Previous</a>
                </li>
            }
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>

             